
        // outside:
        RecordsBatchValidator batchValidator = new RecordsBatchValidator(SingleRecordValidator srValidator, RecordContext context);

        private static StringBuilder processBunchData(
               IDataFetcher dataFetcher,
               RecordsBatchValidator batchValidator,
               IInspectionValidator inspectionValidator,
               IInvalidDataReportCreator invalidReportCreator,
               Context ctx,
               StringBuilder sb)
        {
            List<IList<object>> data = dataFetcher.Fetch();
            

            List<InvalidDataInfo> lstInvalidData = dataBatchValidator.Validate(data);


            if (lstInvalidData.Count > 0)
            {
                sb.AppendLine(invalidReportCreator.Create(lstInvalidData));
                return sb;
            }


//////// IKI ŠITOS VIETOS



            List<Inspection> inspList = new List<Inspection>();
            foreach(var row in data.Rows)
            {
                inspList.Add(new Inspection(row));
            }

            foreach(var insp in inspList)
            {
                lstInvalidData.Append(inspectionValidator(insp));
            }

            if (lstInvalidData.Count > 0)
            {
                sb.AppendLine(invalidReportCreator.Create(lstInvalidData));
            }
            else
            {
                sb.AppendLine("Viskas zb");
            }

            return sb;
        }
    }
}
